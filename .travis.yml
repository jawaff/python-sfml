env:
  global:
    - SFML_VERSION=2.3.2
    
# Caches are only shared by builds with the same OS and environment variables.
# Thus this OS specific dependency directory can safely be cached.
cache:
  directories:
    - extlibs/SFML-$SFML_VERSION

cache:
  timeout: 180
    
matrix:
  include:
    - os: linux
      language: python
      python: 2.7
      cache: pip
      env:
        # Only one sdist file can be published to pypi.
        - DISTRIBUTIONS: sdist bdist_wheel
    - os: linux
      language: python
      python: 3.7-dev
      cache: pip
      env:
        - DISTRIBUTIONS: bdist_wheel
    - os: windows
      # Travis' Windows Env doesn't support a Python language.
      language: shell
      env:
        # We can only support up to Python 3.6.6, because our SFML-2.3.2 and Python 3.6.6 are compiled against VS14 (2015).
        - PYTHON_VERSION=3.6.6
        - PYTHON_HOME='C:\Python36'
        - VS14_BIN='C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin'
        - DISTRIBUTIONS: bdist_wheel

      
before_install:
  - chmod +x scripts/sfml_install.sh
  - chmod +x scripts/env_setup.sh
  # This works in any OS's bash environment so far.
  - ./scripts/sfml_install.sh $TRAVIS_OS_NAME $SFML_VERSION
  # Sets up the python/pip/vs14 environment that is expected later in this script for Windows.
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then powershell -ExecutionPolicy RemoteSigned -File ./scripts/windows_base_install.ps1 $PYTHON_VERSION $PYTHON_HOME; fi
  # The '.' executes this script within the current Bash shell -- allows environment variable updates.
  - . scripts/env_setup.sh $TRAVIS_OS_NAME $SFML_VERSION
  # Windows requires environment vaiables to be updated in this scope.
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then export PATH="$PYTHON_HOME:$PYTHON_HOME\Scripts:$VS14_BIN:$PATH"; fi
    
notifications:
  email: false

install:
  - pip install -r requirements.txt
  - python setup.py build

script:
  -  ls build/

before_deploy:
  # Versioneer creates these .pyc files during the install phase.
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then rm -f versioneer.pyc; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then rm -r __pycache__; fi
  # The '.' executes this script within the current Bash shell -- allows environment variable updates.
  - . scripts/env_setup.sh $TRAVIS_OS_NAME $SFML_VERSION
  # Windows requires environment vaiables to be updated in this scope.
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then export PATH="$PYTHON_HOME:$PYTHON_HOME\Scripts:$VS14_BIN:$PATH"; fi

deploy:
  provider: pypi
  user: jawaff
  server: https://test.pypi.org/legacy/ # Remove for deployment to official PyPi repo
  password:
    secure: abthLtD+GuIc7VHzLHH4H/yDPcUuFEymJLC6IPt3BNxYBSj4ae5k3gYQDTqb8kV95l0Qlz1PIEcNz/4LtWUoj+/NT3Hz3OWBbSkeHf60E6Xac+Vi9k6xJNnbt7lXrm3niL47DLWi7qvOPvQSKUoY1nbir/GjvGH6RYCoDExQxYFEGVx/WvIigX57jdPNMBptNfW5FDB+dMuvXVPbzThEL6F6QmNGusPB+W+aeSOtuz6c1btaJ1InXA6sVUW9UNUjqhj6OgDcyzT8T7WfcFgrXhNzc1t1kcQrQ2e6b42nDBrAQvrn32G8HyFr30RdUKAxE84w67NoVEDmJVvM3ZYfY/dv+9ybsaVeteJ0FdfqMI299rqsl7Jb0HqIlfmbB8nzlLH1Mo7Nbc/ywnJ2GL4jzt4LEwVG7Hf4Ay8LPNSIgXr+sZxmD+ezF28/tVALpHLRP0jGGn6o5bF994q8wwkyyCtMZTmpEvynQysmSOAyxbyBXZ5ankxpm+m84R+eIcnxiZiH3BKxnAN9v1Anuqo6jgh5PuDSWDsk0iKt2eI1rTjL4Dx1Qvjz4GZnTuyj9qjiICVDnaYahUKw9XOvbZcIpFZccvQ24Gcxzhbj5kQp1RnjTU3MVtzP95jz+B7nbBGO6cnivvTBHUYxSKuzt8UIKkQfEnjxLTtiD+SaJwQzMzA=
  distributions: "$DISTRIBUTIONS"
  on:
    # Restricts deployments to version tagged commits -- only valid versions allowed as well.
    tags: true
    all_branches: true
    condition: $TRAVIS_TAG =~ ^v([0-9]+\.){2,3}[0-9]+(-\.+)?$
